%YAML 1.2
---
# See http://www.sublimetext.com/docs/3/syntax.html
# ESP-r model file syntax highlighter for Sublime Text 3 
# v1.2 18/1/18
# A Cowie
name: ESP-r
file_extensions: [cfg, cnn, ctl, afn, geo, con, opr, tmc, dfd, fmi]
scope: text.espr

contexts:
  # The prototype context is prepended to all contexts but those setting
  # meta_include_prototype: false.
  prototype:
    - include: comments
    - include: separators

  main:
    # The main context is the initial starting point of our syntax.
    # Include other contexts from here (or specify them directly).
    - include: numbers
    - include: minor_tags
    - include: major_tags

  separators:
    # Doesn't do anything on most colour schemes.
    - match: ','
      scope: punctuation.separator.espr

  numbers:
    # Possible number formats are: 0, 0.0, 0h0, 0E0, 0.0E0
    - match: '-?\b[0-9]+(\.[0-9]*(E-?[0-9]+)?|h[0-9]+)?\b\.?'
      scope: constant.numeric.espr

  comments:
    # Comments begin with a '#' and finish at the end of the line.
    - match: '#'
      scope: punctuation.definition.comment.espr
      push:
        - meta_include_prototype: false
        - meta_scope: comment.espr
        - match: $\n?
          pop: true

  minor_tags:
    # Minor tag-data entries begin with a '*' followed by a word, 
    # and any subsequent text is the data. These entries finish at the 
    # end of the line.
    - match: '^\*[^ ,\t\n]+[ ,\t\n]' 
      scope: keyword.espr
      set: tag_data

  major_tags:
    # Major tag-data entries begin with a '*', followed by a space,
    # then a keyword or keywords. Any subsequent text is data. 
    # These entries finish at the end of the line.
    # Unrecognised major tags will be highlighted.
    - match: '^\*\s+'
      scope: keyword.espr
      set:
        - match: 'CONFIGURATION[0-9.]++|DATABASES|PROJ LOG|Building|end tdf|Control function|Mass Flow|Control mass'
          scope: keyword.espr
          set: tag_data
        - match: '.*$'
          scope: invalid.espr
          pop: true

  tag_data:    
    - meta_content_scope: string.espr
    - match: $\n?
      pop: true
